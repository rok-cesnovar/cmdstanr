% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\name{model-method-generate-quantities}
\alias{model-method-generate-quantities}
\alias{generate_quantities}
\title{Run Stan's standalone generated quantities method}
\description{
The \verb{$generate_quantities()} method of a \code{\link{CmdStanModel}} object
runs Stan's standalone generated quantities to obtain generated quantities
based on previously fitted parameters.
}
\section{Usage}{
\preformatted{$generate_quantities(
  fitted_params,
  data = NULL,
  seed = NULL,
  dir = NULL,
  parallel_chains = getOption("mc.cores", 1),
  threads_per_chain = NULL
)
}
}

\section{Arguments}{

\itemize{
\item \code{fitted_params}: (multiple options) The parameter draws to use. One of the following:
\itemize{
\item A \link{CmdStanMCMC} fitted model object.
\item A character vector of paths to CmdStan CSV output files containing
parameter draws.
}
\item \code{data}, \code{seed}, \code{dir}, \code{parallel_chains}, \code{threads_per_chain}:
Same as for the \code{\link[=model-method-sample]{$sample()}} method.
}
}

\section{Value}{
 The \verb{$generate_quantities()} method returns a \code{\link{CmdStanGQ}} object.
}

\examples{
\dontrun{
# first fit a model using MCMC
mcmc_program <- write_stan_file(
  "data {
    int<lower=0> N;
    int<lower=0,upper=1> y[N];
  }
  parameters {
    real<lower=0,upper=1> theta;
  }
  model {
    y ~ bernoulli(theta);
  }"
)
mod_mcmc <- cmdstan_model(mcmc_program)

data <- list(N = 10, y = c(1,1,0,0,0,1,0,1,0,0))
fit_mcmc <- mod_mcmc$sample(data = data, seed = 123, refresh = 0)

# stan program for standalone generated quantities
# (could keep model block, but not necessary so removing it)
gq_program <- write_stan_file(
  "data {
    int<lower=0> N;
    int<lower=0,upper=1> y[N];
  }
  parameters {
    real<lower=0,upper=1> theta;
  }
  generated quantities {
    int y_rep[N] = bernoulli_rng(rep_vector(theta, N));
  }"
)

mod_gq <- cmdstan_model(gq_program)
fit_gq <- mod_gq$generate_quantities(fit_mcmc, data = data, seed = 123)
str(fit_gq$draws())

library(posterior)
as_draws_df(fit_gq$draws())
}

}
\seealso{
The CmdStanR website
(\href{https://mc-stan.org/cmdstanr/}{mc-stan.org/cmdstanr}) for online
documentation and tutorials.

The Stan and CmdStan documentation:
\itemize{
\item Stan documentation: \href{https://mc-stan.org/users/documentation/}{mc-stan.org/users/documentation}
\item CmdStan Userâ€™s Guide: \href{https://mc-stan.org/docs/cmdstan-guide/}{mc-stan.org/docs/cmdstan-guide}
}

Other CmdStanModel methods: 
\code{\link{model-method-check_syntax}},
\code{\link{model-method-compile}},
\code{\link{model-method-optimize}},
\code{\link{model-method-sample}},
\code{\link{model-method-variational}}
}
\concept{CmdStanModel methods}
